** Dif amp with system **
* 
* NI Multisim to SPICE Netlist Export
* Generated by: majed
* Sun, Jun 14, 2020 16:22:30 
*

*## Multisim Component C3 ##*
* !!!BEGIN-INTERACT
*  : delay_factor ++++i2   ;
*  : setval       ++++f4   ;
*  : ratedval     ++++f6   ;
*  : init_cond    ++++f8   ;
*  0          constant  S_OK
*  1e-15      VARIABLE  capblown
*  0.0        VARIABLE  flag
*  0.0        VARIABLE  r1Cur
*  0.0        VARIABLE  c1Voltage
*  0.0        VARIABLE  resistance
*  0          VARIABLE  cnt
*  1          VARIABLE  delaytime
*  0          VARIABLE  S_BLOWN
*
* : DELAY
*  *delaytime  0 do
*          *cnt 1+ ==>_*cnt
*          *cnt *delaytime =  if
*          *S_BLOWN 1 + ==>_*S_BLOWN
*          0 ==>_*cnt
*          endif
*   loop
*   *S_BLOWN ==>_*animation_state
* ;
*
* : RESET
*       delay_factor 10000 * ==>_*delaytime
*       0.0 ==>_*flag
*       0.0 ==>_*c1Voltage
*       0.0 ==>_*r1Cur
*       1e15 ==>_*resistance
*       S_OK   ==>_*animation_state
*       0 ==>_*S_BLOWN
* ;
*
*  :BEGIN_PLOT
*         RESET
*  ;
*
*  : C_BLOWN
*      *capblown  resistance   GRADUAL_CHANGE_AT_RUN
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value     SET_INSTANCE Resistor ::R r1 resistance
*  ;
*
*  :OUT_DATA
*   1.0 *flag f.> if
*     GET_INSTANCE Resistor ::R r1  i  ==>_*r1Cur
*     *r1Cur f.abs 1e30 f.* ==>_*c1Voltage
*     ratedval *c1Voltage f.< if
*          1.0 ==>_*flag
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          C_BLOWN
*     endif
*   endif
*  ;
*
* :BEGIN_ANALYSIS
*     RESET
* ;
*
* !!!END-INTERACT
xC3 3 0 virtual_capC3
.subckt virtual_capC3 1 2
r1 1 2 1e30
c1 1 2 1e-010  IC=0
.ends

*## Multisim Component C2 ##*
* !!!BEGIN-INTERACT
*  : delay_factor ++++i2   ;
*  : setval       ++++f4   ;
*  : ratedval     ++++f6   ;
*  : init_cond    ++++f8   ;
*  0          constant  S_OK
*  1e-15      VARIABLE  capblown
*  0.0        VARIABLE  flag
*  0.0        VARIABLE  r1Cur
*  0.0        VARIABLE  c1Voltage
*  0.0        VARIABLE  resistance
*  0          VARIABLE  cnt
*  1          VARIABLE  delaytime
*  0          VARIABLE  S_BLOWN
*
* : DELAY
*  *delaytime  0 do
*          *cnt 1+ ==>_*cnt
*          *cnt *delaytime =  if
*          *S_BLOWN 1 + ==>_*S_BLOWN
*          0 ==>_*cnt
*          endif
*   loop
*   *S_BLOWN ==>_*animation_state
* ;
*
* : RESET
*       delay_factor 10000 * ==>_*delaytime
*       0.0 ==>_*flag
*       0.0 ==>_*c1Voltage
*       0.0 ==>_*r1Cur
*       1e15 ==>_*resistance
*       S_OK   ==>_*animation_state
*       0 ==>_*S_BLOWN
* ;
*
*  :BEGIN_PLOT
*         RESET
*  ;
*
*  : C_BLOWN
*      *capblown  resistance   GRADUAL_CHANGE_AT_RUN
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value     SET_INSTANCE Resistor ::R r1 resistance
*  ;
*
*  :OUT_DATA
*   1.0 *flag f.> if
*     GET_INSTANCE Resistor ::R r1  i  ==>_*r1Cur
*     *r1Cur f.abs 1e30 f.* ==>_*c1Voltage
*     ratedval *c1Voltage f.< if
*          1.0 ==>_*flag
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          C_BLOWN
*     endif
*   endif
*  ;
*
* :BEGIN_ANALYSIS
*     RESET
* ;
*
* !!!END-INTERACT
xC2 4 3 virtual_capC2
.subckt virtual_capC2 1 2
r1 1 2 1e30
c1 1 2 1e-007  IC=0
.ends

*## Multisim Component C1 ##*
* !!!BEGIN-INTERACT
*  : delay_factor ++++i2   ;
*  : setval       ++++f4   ;
*  : ratedval     ++++f6   ;
*  : init_cond    ++++f8   ;
*  0          constant  S_OK
*  1e-15      VARIABLE  capblown
*  0.0        VARIABLE  flag
*  0.0        VARIABLE  r1Cur
*  0.0        VARIABLE  c1Voltage
*  0.0        VARIABLE  resistance
*  0          VARIABLE  cnt
*  1          VARIABLE  delaytime
*  0          VARIABLE  S_BLOWN
*
* : DELAY
*  *delaytime  0 do
*          *cnt 1+ ==>_*cnt
*          *cnt *delaytime =  if
*          *S_BLOWN 1 + ==>_*S_BLOWN
*          0 ==>_*cnt
*          endif
*   loop
*   *S_BLOWN ==>_*animation_state
* ;
*
* : RESET
*       delay_factor 10000 * ==>_*delaytime
*       0.0 ==>_*flag
*       0.0 ==>_*c1Voltage
*       0.0 ==>_*r1Cur
*       1e15 ==>_*resistance
*       S_OK   ==>_*animation_state
*       0 ==>_*S_BLOWN
* ;
*
*  :BEGIN_PLOT
*         RESET
*  ;
*
*  : C_BLOWN
*      *capblown  resistance   GRADUAL_CHANGE_AT_RUN
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value     SET_INSTANCE Resistor ::R r1 resistance
*  ;
*
*  :OUT_DATA
*   1.0 *flag f.> if
*     GET_INSTANCE Resistor ::R r1  i  ==>_*r1Cur
*     *r1Cur f.abs 1e30 f.* ==>_*c1Voltage
*     ratedval *c1Voltage f.< if
*          1.0 ==>_*flag
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          DELAY
*          C_BLOWN
*     endif
*   endif
*  ;
*
* :BEGIN_ANALYSIS
*     RESET
* ;
*
* !!!END-INTERACT
xC1 2 1 virtual_capC1
.subckt virtual_capC1 1 2
r1 1 2 1e30
c1 1 2 1e-006  IC=0
.ends

*## Multisim Component R3 ##*
rR3 3 0 1000000 vresR3  
.model vresR3 r(  )

*## Multisim Component R2 ##*
rR2 5 0 470 vresR2  
.model vresR2 r(  )

*## Multisim Component R1 ##*
rR1 1 0 12000 vresR1  
.model vresR1 r(  )

*## Multisim Component V1 ##*
vV1 2 0 dc 0 ac 1 0
+      distof1 0 0
+      distof2 0 0
+      sin(0 0.2 10000 0 0 0)

*## Multisim Component Q1 ##*
qQ1 4 1 5 NPN__TRANSISTORS_VIRTUAL__1

*## Multisim Component VCC ##*
VCCVCC  VCC 0 dc 15

*## Multisim Component R17 ##*
rR17 VCC 4 5600 vresR17  
.model vresR17 r(  )

*## Multisim Component R16 ##*
rR16 VCC 1 120000 vresR16  
.model vresR16 r(  )


.MODEL NPN__TRANSISTORS_VIRTUAL__1 NPN


